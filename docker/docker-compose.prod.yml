services:
  traefik:
    image: traefik:v2.10
    command:
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.email=contact.forgewrite@gmail.com"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./letsencrypt:/letsencrypt
    networks:
      - forgewrite
    restart: unless-stopped

  db:
    image: mysql:8
    environment:
      MYSQL_DATABASE: forgewrite
      MYSQL_USER: forge
      MYSQL_PASSWORD: write
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - mysqldata:/var/lib/mysql
    networks:
      - forgewrite
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 5s
      retries: 10

  api:
    build:
      context: ../api
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.forgewrite.fr`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=letsencrypt"
      - "traefik.http.services.api.loadbalancer.server.port=3000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - forgewrite
    restart: unless-stopped

  client:
    build:
      context: ../client
      dockerfile: Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.front.rule=Host(`www.forgewrite.fr`)"
      - "traefik.http.routers.front.entrypoints=websecure"
      - "traefik.http.routers.front.tls.certresolver=letsencrypt"
      - "traefik.http.services.front.loadbalancer.server.port=80"

      # Redirection HTTP forgewrite.fr â†’ www.forgewrite.fr
      - "traefik.http.routers.redirect-http.rule=Host(`forgewrite.fr`)"
      - "traefik.http.routers.redirect-http.entrypoints=web"
      - "traefik.http.routers.redirect-http.middlewares=redirect-to-www"

      - "traefik.http.routers.redirect-https.rule=Host(`forgewrite.fr`)"
      - "traefik.http.routers.redirect-https.entrypoints=websecure"
      - "traefik.http.routers.redirect-https.tls=true"
      - "traefik.http.routers.redirect-https.tls.certresolver=letsencrypt"
      - "traefik.http.routers.redirect-https.middlewares=redirect-to-www"

      - "traefik.http.middlewares.redirect-to-www.redirectregex.regex=^https?://forgewrite.fr/(.*)"
      - "traefik.http.middlewares.redirect-to-www.redirectregex.replacement=https://www.forgewrite.fr/\\1"
      - "traefik.http.middlewares.redirect-to-www.redirectregex.permanent=true"
    networks:
      - forgewrite
    restart: unless-stopped

  matomo:
    image: matomo
    restart: unless-stopped
    volumes:
      - matomo-data:/var/www/html
    environment:
      - MATOMO_DATABASE_HOST=db_matomo
      - MATOMO_DATABASE_ADAPTER=mysql
      - MATOMO_DATABASE_TABLES_PREFIX=matomo_
      - MATOMO_DATABASE_USERNAME=matomo
      - MATOMO_DATABASE_PASSWORD=matomo_pass
      - MATOMO_DATABASE_DBNAME=matomo
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.matomo.rule=Host(`analytics.forgewrite.fr`)"
      - "traefik.http.routers.matomo.entrypoints=websecure"
      - "traefik.http.routers.matomo.tls.certresolver=letsencrypt"
      - "traefik.http.services.matomo.loadbalancer.server.port=80"
    networks:
      - forgewrite
    depends_on:
      - db_matomo

  db_matomo:
    image: mariadb
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: matomo
      MYSQL_USER: matomo
      MYSQL_PASSWORD: matomo_pass
    volumes:
      - matomo-db:/var/lib/mysql
    networks:
      - forgewrite


volumes:
  mysqldata:
  matomo-data:
  matomo-db:

networks:
  forgewrite:
